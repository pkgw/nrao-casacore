import os
import sys

# Put the package name here, e.g. casa, tables
PACKAGE = "mirlib"

# general options
opts = Variables( 'options.cfg', ARGUMENTS )
opts.Add(PathVariable("casacoreroot", "The location of casacore/casa",
                    "/usr/local"))

env = Environment(ENV = { 'PATH' : os.environ[ 'PATH' ],
			  'HOME' : os.environ[ 'HOME' ] 
			  },
		  variables=opts
		  )
# keep a local sconsign database, rather than in very directory
env.SConsignFile()

env["PACKAGE"] = PACKAGE

# use directory from casacore/casa installation
env["casaincdir"] = [os.path.join(env["casacoreroot"],"include","casacore")]
env["casalibdir"] = [os.path.join(env["casacoreroot"],"lib")]
env["casashrdir"] = [os.path.join(env["casacoreroot"],"share","casacore")]

env.Tool('casaoptions', env["casashrdir"])
# Add common options
env.AddCommonOptions(opts)
env.Tool('installer', env["casashrdir"])
# add installer options, e.g. prefix
env.AddInstallerOptions( opts )
# add them into environment
opts.Update( env )
# cache them for the next run
opts.Save( 'options.cfg', env)
Help( opts.GenerateHelpText( env ) )
env.Tool('buildenv', env["casashrdir"])
env.Tool('utils', env["casashrdir"])
env.Tool('casa', env["casashrdir"])

if env.GetOption('clean'):
    Execute(Delete("options.cfg"))

# create the installer which handles installing the final build
installer = env.Installer()

# to find package based includes
env.Append(CPPPATH='#')

env.Alias("test",None)

for bopt in env["build"]:
    buildenv = env.BuildEnv(bopt)
    buildenv["BUILDDIR"] = Dir("#/build_%s/%s" % (env.PlatformIdent(), bopt))
    env.SConscript(["SConscript"], 
                   build_dir= buildenv["BUILDDIR"],
                   duplicate=0, exports=["buildenv", "installer"]) 
installer.AddHeaders( ".", "*.h", "casacore/mirlib", True )
